quarkus.smallrye-health.root-path=/health
quarkus.smallrye-health.liveness-path=liveness
quarkus.smallrye-health.readiness-path=readiness

quarkus.native.additional-build-args= \
    -H:ResourceConfigurationFiles=resource-config.json, \
    -H:ReflectionConfigurationFiles=reflect-config.json, \
    -H:DynamicProxyConfigurationFiles=proxy-config.json
quarkus.ssl.native=true
quarkus.native.auto-service-loader-registration=true

# This application requires an object storage service. Based on the storage service you are using, you can configure the following properties:

# S3 Storage
# serverlessbench.s3-access-key-id=<AWSAccessKeyID>
#   or by using system property "-Dserverlessbench.s3-access-key-id=<AWSAccessKeyID>"
#   or by using environment variable "S3_ACCESS_KEY_ID"
# serverlessbench.s3-secret-access-key=<AWSSecretAccessKey>
#   or by using system property "-Dserverlessbench.s3-secret-access-key=<AWSSecretAccessKey>"
#   or by using environment variable "S3_SECRET_ACCESS_KEY"
# serverlessbench.s3-endpoint=<EndpointURL>
#   or by using system property "-Dserverlessbench.s3-endpoint=<EndpointURL>"
#   or by using environment variable "S3_ENDPOINT"
#
# Some examples of endpoint URLs are:
# - MinIO (default):    http://localhost:9000
# - Amazon S3:          https://s3.us-east-2.amazonaws.com
# - IBM Cloud (public): https://s3.us-south.cloud-object-storage.appdomain.cloud
# - IBM Cloud (direct): https://s3.direct.us-south.cloud-object-storage.appdomain.cloud

# Azure Blob Storage
# If this application is deployed as an Azure Function, the Azure Blob Storage connection string is automatically provided by the Azure Functions runtime.
# serverlessbench.azureWebJobsStorage=<Connection String>
#   or by using system property "-Dserverlessbench.azureWebJobsStorage=<Connection String>"
#   or by using environment variable "AzureWebJobsStorage"

# Google Cloud Storage
# serverlessbench.gcp-client-email=<KeyClientEmail>
#   or by using system property "-Dserverlessbench.gcp-client-email=<KeyClientEmail>"
#   or by using environment variable "GCP_CLIENT_EMAIL"
# serverlessbench.gcp-private-key=<Key
#   or by using system property "-Dserverlessbench.gcp-private-key=<Key>"
#   or by using environment variable "GCP_PRIVATE_KEY"

